cmake_minimum_required(VERSION 3.1)
project(hyper)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)

if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
    message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

include_directories(".")

add_subdirectory(net)
add_subdirectory(protocols)

aux_source_directory(. HYPER_SOURCE)
add_executable(hyper ${HYPER_SOURCE})

target_link_libraries(hyper hypernet hyperportocols)
TARGET_LINK_LIBRARIES(hyper pthread)

#add_library(hyper NET_SOURCE)